#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –∏–≥—Ä—ã "–í—ã–∫–ª—é—á–∏ —Å–≤–µ—Ç"
"""

from PyQt6.QtWidgets import (QMainWindow, QWidget, QVBoxLayout, QHBoxLayout, 
                            QGridLayout, QPushButton, QLabel, QMessageBox, QDialog)
from PyQt6.QtGui import QFont

from game_logic import Game
from ui_components import SettingsDialog, RulesDialog, LightButton, DifficultySelectionDialog
from config import DEFAULT_LIGHT_COLOR, DEFAULT_DARK_COLOR, WINDOW_WIDTH, WINDOW_HEIGHT, DIFFICULTY_LEVELS


class MainWindow(QMainWindow):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –∏–≥—Ä—ã"""
    
    def __init__(self):
        super().__init__()
        self.game = Game()  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å
        self.light_color = DEFAULT_LIGHT_COLOR
        self.dark_color = DEFAULT_DARK_COLOR
        self.buttons = []
        
        self.setWindowTitle("–í—ã–∫–ª—é—á–∏ —Å–≤–µ—Ç")
        self.setFixedSize(WINDOW_WIDTH, WINDOW_HEIGHT)
        
        self._setup_ui()
        self._setup_menu()
        self.new_game()
    
    def _setup_ui(self):
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        
        self.main_layout = QVBoxLayout()
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
        info_layout = QHBoxLayout()
        self.difficulty_label = QLabel(f"–£—Ä–æ–≤–µ–Ω—å: {self.game.difficulty}")
        self.difficulty_label.setFont(QFont("Arial", 10))
        self.moves_label = QLabel("–•–æ–¥—ã: 0")
        self.moves_label.setFont(QFont("Arial", 12))
        
        info_layout.addWidget(self.difficulty_label)
        info_layout.addStretch()
        info_layout.addWidget(self.moves_label)
        
        self.main_layout.addLayout(info_layout)
        
        # –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
        self.grid_widget = QWidget()
        self.main_layout.addWidget(self.grid_widget)
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
        new_game_btn = QPushButton("–ù–æ–≤–∞—è –∏–≥—Ä–∞")
        new_game_btn.clicked.connect(self.new_game)
        self.main_layout.addWidget(new_game_btn)
        
        central_widget.setLayout(self.main_layout)
    
    def _setup_menu(self):
        menubar = self.menuBar()
        
        # –ú–µ–Ω—é –ò–≥—Ä–∞
        game_menu = menubar.addMenu("–ò–≥—Ä–∞")
        
        new_action = game_menu.addAction("–ù–æ–≤–∞—è –∏–≥—Ä–∞")
        new_action.triggered.connect(self.new_game)
        
        settings_action = game_menu.addAction("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        settings_action.triggered.connect(self.show_settings)
        
        # –ú–µ–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
        difficulty_menu = game_menu.addMenu("–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
        for difficulty in DIFFICULTY_LEVELS.keys():
            action = difficulty_menu.addAction(difficulty)
            action.triggered.connect(lambda checked, d=difficulty: self.set_difficulty(d))
        
        game_menu.addSeparator()
        
        exit_action = game_menu.addAction("–í—ã—Ö–æ–¥")
        exit_action.triggered.connect(self.close)
        
        # –ú–µ–Ω—é –°–ø—Ä–∞–≤–∫–∞
        help_menu = menubar.addMenu("–°–ø—Ä–∞–≤–∫–∞")
        
        rules_action = help_menu.addAction("–ü—Ä–∞–≤–∏–ª–∞")
        rules_action.triggered.connect(self.show_rules)
    
    def _create_grid(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫"""
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π grid_widget –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if hasattr(self, 'grid_widget') and self.grid_widget is not None:
            self.main_layout.removeWidget(self.grid_widget)
            self.grid_widget.setParent(None)
            self.grid_widget.deleteLater()
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π grid_widget
        self.grid_widget = QWidget()
        
        # –í—Å—Ç–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –≤ layout (–ø–æ–∑–∏—Ü–∏—è 1 - –ø–æ—Å–ª–µ info_layout)
        self.main_layout.insertWidget(1, self.grid_widget)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–µ—Ç–∫–∏
        self.grid_layout = QGridLayout()
        self.grid_widget.setLayout(self.grid_layout)
        
        self.buttons = []
        for row in range(self.game.size):
            button_row = []
            for col in range(self.game.size):
                button = LightButton(row, col)
                button.clicked_with_position.connect(self.on_button_clicked)
                self.grid_layout.addWidget(button, row, col)
                button_row.append(button)
            self.buttons.append(button_row)
    
    def update_display(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è"""
        for row in range(self.game.size):
            for col in range(self.game.size):
                is_on = self.game.grid[row][col]
                self.buttons[row][col].set_state(is_on, self.light_color, self.dark_color)
        
        self.moves_label.setText(f"–•–æ–¥—ã: {self.game.moves}")
        self.difficulty_label.setText(f"–£—Ä–æ–≤–µ–Ω—å: {self.game.difficulty}")
    
    def on_button_clicked(self, row, col):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É"""
        self.game.make_move(row, col)
        self.update_display()
        
        if self.game.is_solved:
            self.show_victory_dialog()
    
    def new_game(self):
        """–ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –∏–≥—Ä—ã"""
        self.game.reset_game()
        self._create_grid()
        self.update_display()
    
    def show_settings(self):
        """–ü–æ–∫–∞–∑ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        dialog = SettingsDialog(self, self.light_color, self.dark_color)
        if dialog.exec() == QDialog.DialogCode.Accepted:
            settings = dialog.get_settings()
            self.light_color = settings['light_color']
            self.dark_color = settings['dark_color']
            
            # –¶–≤–µ—Ç–∞ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            self.update_display()
    
    def show_rules(self):
        """–ü–æ–∫–∞–∑ –¥–∏–∞–ª–æ–≥–∞ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏"""
        dialog = RulesDialog(self)
        dialog.exec()
    
    def set_difficulty(self, difficulty):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
        self.game.reset_game(difficulty)
        self._create_grid()
        self.update_display()
    
    def show_victory_dialog(self):
        """–ü–æ–∫–∞–∑ –¥–∏–∞–ª–æ–≥–∞ –ø–æ–±–µ–¥—ã —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –Ω–æ–≤–æ–π –∏–≥—Ä—ã"""
        msg = QMessageBox(self)
        msg.setWindowTitle("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!")
        msg.setText(f"üéâ –í—ã —Ä–µ—à–∏–ª–∏ –≥–æ–ª–æ–≤–æ–ª–æ–º–∫—É –∑–∞ {self.game.moves} —Ö–æ–¥–æ–≤!")
        msg.setInformativeText(f"–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: {self.game.difficulty}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        new_game_btn = msg.addButton("–ù–æ–≤–∞—è –∏–≥—Ä–∞", QMessageBox.ButtonRole.AcceptRole)
        change_difficulty_btn = msg.addButton("–ò–∑–º–µ–Ω–∏—Ç—å —Å–ª–æ–∂–Ω–æ—Å—Ç—å", QMessageBox.ButtonRole.ActionRole)
        close_btn = msg.addButton("–ó–∞–∫—Ä—ã—Ç—å", QMessageBox.ButtonRole.RejectRole)
        
        msg.setDefaultButton(new_game_btn)
        msg.exec()
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π
        if msg.clickedButton() == new_game_btn:
            self.new_game()
        elif msg.clickedButton() == change_difficulty_btn:
            self.show_difficulty_selection()
    
    def show_difficulty_selection(self):
        """–ü–æ–∫–∞–∑ –¥–∏–∞–ª–æ–≥–∞ –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
        dialog = DifficultySelectionDialog(self, DIFFICULTY_LEVELS)
        if dialog.exec() == QDialog.DialogCode.Accepted:
            selected_difficulty = dialog.get_selected_difficulty()
            if selected_difficulty:
                self.set_difficulty(selected_difficulty)